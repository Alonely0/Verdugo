3
        let banMember = message.mentions.members.first();
        let mentionMessage = message.content.slice (10);
        if (!message.guild.me.hasPermission("BAN_MEMBERS")) return message.channel.send('No tengo los permisos para banear miembros.');
        if (!banMember.hasPermission("ADMINISTRATOR")) return message.channel.send('El miembro no es baneable.');
        let muterole = message.guild.roles.find(`name`, "muted");

        if(!muterole){
            try{
              muterole = await message.guild.createRole({
                name: "muted",
                color: "#000000",
                permissions:[]
              })
              message.guild.channels.forEach(async (channel, id) => {
                await channel.overwritePermissions(muterole, {
                  SEND_MESSAGES: false,
                  ADD_REACTIONS: false
                });
              });
            }catch(e){
              console.log(e.stack);
            }
          }
          //end of create role
          let mutetime = "10s";
          if(!mutetime) return message.reply("You didn't specify a time!");
        
          await(tomute.addRole(muterole.id));
          message.reply(`<@${tomute.id}> has been muted for ${ms(ms(mutetime))}`);
        
          setTimeout(function(){
            tomute.removeRole(muterole.id);
            message.channel.send(`<@${tomute.id}> has been unmuted!`);
          }, ms(mutetime));
        
        
        //end of module
        }
};




2



        let banMember = message.mentions.members.first();
        let mentionMessage = message.content.slice (10);
        if (!message.guild.me.hasPermission("BAN_MEMBERS")) return message.channel.send('No tengo los permisos para banear miembros.');
        if (!message.member.hasPermission("BAN_MEMBERS")) return message.channel.send('No tienes los permisos para banear miembros.');
        if (!mentionMessage) return message.channel.send('Especifica un motivo')
        if (!member.kickable) return message.channel.send('El miembro no es baneable.')
        banMember.send(`Has sido ahorcado 1 dia por ${mentionMessage}. Si mañana a esta hora no puede entrar al servidor, clicke a este enlace, https://discord.gg/Nrbd6fY. Solo funcionara cuando deje de estar baneado. Si el enlace no funciona tendra que avisar a un administrador del servidor para que lo invite o revoque el baneo en caso de error.`).then(() =>
            message.guild.ban(banMember, { days: 1, reason: mentionMessage}))
            message.channel.send ('Ha sido Ahorcado 1 dia.');
            
}};






1

        mention = message.mentions.users.first();

        if (mention == null) { return; }
        let banMember = message.mentions.members.first();
        banMember.send(`Has sido ahorcado 1 dia por ${mentionMessage = message.content.slice (10)}. Si mañana a esta hora no puede entrar al servidor, clicke a este enlace, https://discord.gg/Nrbd6fY. Solo funcionara cuando deje de estar baneado. Si el enlace no funciona tendra que avisar a un administrador del servidor para que lo invite o revoque el baneo en caso de error.`).then(() =>
            message.guild.ban(banMember, { days: 1, reason: mentionMessage = message.content.slice (10)})).catch(err => { message.channel.send('Al final no se ha podido ahorcar al miembro OwO')});
            message.channel.send ('Ha sido Ahorcado 1 dia.');
        
}};